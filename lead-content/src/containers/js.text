从输入URL到最终在浏览器中呈现页面，涉及了多个步骤和各种技术。以下是简要的概述：

1. **URL解析和分析**：
   当您在浏览器中输入URL（统一资源定位符），浏览器首先会解析该URL，分析其中的协议（例如HTTP、HTTPS）、主机名（例如www.example.com）以及路径等信息。

2. **DNS解析**：
   浏览器需要将主机名（例如www.example.com）转换为IP地址，以便找到要请求的服务器。这个过程称为DNS解析。浏览器会向DNS服务器查询主机名对应的IP地址。

3. **建立网络连接**：
   一旦浏览器获取了服务器的IP地址，它会尝试与服务器建立网络连接。这通常是通过TCP/IP协议完成的。

4. **发送HTTP请求**：
   一旦与服务器建立连接，浏览器会发送一个HTTP请求，其中包括之前解析的URL的详细信息，以及其他请求头部信息（如User-Agent、Cookies等）。

5. **服务器处理请求**：
   服务器收到HTTP请求后，会根据请求的内容和信息处理该请求。它可能会从文件系统中读取所请求的资源，或者执行服务器端脚本生成动态内容。

6. **服务器响应**：
   服务器将根据请求生成一个HTTP响应。该响应包括状态码、响应头部信息（如Content-Type、Content-Length等）以及实际的响应内容（HTML、图片、文本等）。

7. **接收响应**：
   浏览器接收到服务器的HTTP响应后，开始处理它。根据Content-Type，浏览器可能会渲染HTML、加载外部资源（如CSS、JavaScript、图像等）。

8. **渲染页面**：
   浏览器会解析HTML并构建DOM树，然后将CSS解析为CSS规则树。之后，将两者结合起来以构建渲染树。最终，浏览器使用渲染树来绘制页面。

9. **执行JavaScript**：
   如果页面包含JavaScript代码，浏览器会解析和执行它。JavaScript可能会修改DOM、处理事件、进行网络请求等，从而实现互动和动态内容。

10. **加载其他资源**：
    浏览器会根据需要加载其他资源，如外部CSS、图片、字体等。这些资源可能会通过浏览器的缓存来提高加载速度。

11. **页面完全加载**：
    当所有的HTML、CSS、JavaScript以及其他资源都加载和渲染完毕后，页面就在浏览器中完全呈现出来了。

这是一个简化的概述，实际上涉及更多细节和步骤。整个过程是一个复杂的协调过程，涉及浏览器、网络协议、服务器和客户端技术的相互配合。



URI（统一资源标识符）：

URI 是一个更通用的概念，它用于标识任何资源的抽象名称或地址，不仅限于互联网资源。
URI 包括两个子集：URL 和 URN。
URL（统一资源定位器）：

URL 是 URI 的一种特定形式，它提供了资源的具体位置和访问方式。
URL 包括了用于定位资源的协议（如 HTTP、HTTPS、FTP）、主机名或IP地址、端口号、路径等信息。

协议：HTTPS
主机名：www.example.com
端口号：8080
路径：/path/to/resource

深拷贝的 方法   递归的方式采用深拷贝  或者json序列化   或者第三方工具库 (import { cloneDeep } from 'lodash';)
深拷贝拷贝的是对象以及数组的所以内容  不对原始数据造成影响 
浅拷贝的 方法  复制引用 ， Object.assign 或者数组的Array.slice方法实现
浅拷贝只拷贝对象的内容 而不拷贝对象的本身内容  对原始的数据会造成影响

js是什么  js是一个基于对象和事件驱动的具有安全性能的脚本语言  脚本语言是不可编译的语言称之为脚本语言

http  和  https 的区别
- HTTP传输数据是明文的，HTTPS传输数据是加密的。
- HTTP不提供数据完整性验证，HTTPS提供数据完整性验证，可以检测数据是否被篡改。
- HTTP使用80端口，HTTPS使用443端口。
- HTTPS需要使用数字证书来验证服务器的身份，以确保连接的安全性。


事件轮询机制
所以的同步任务都在主线程是按照顺序执行
除了主线程外还存在一个任务队列  只要所有的异步任务有了结果，就会在任务队列中放置一个事件，
一旦'执行栈'中的所有同步任务执行完毕，系统会读取任务队列中的异步任务，看看由那些事件，等待的异步任务，然后结束等待状态开始执行  
不断执行第三步 形成一个事件轮询机制  这就是js的运行机制

异步任务中的 微任务和宏任务执行顺序
执行顺序总结：
1. 当前执行栈中的代码执行完毕。
2. 执行所有微任务队列中的任务，按照添加顺序执行。
3. 查看是否有用户交互事件或者宏任务，如果有则执行相应的宏任务，从中选择一个执行。
4. 如果有微任务产生，则将微任务添加到微任务队列。
5. 重复步骤 2 - 4 直到没有任何任务为止。

同步任务指的是   所有的任务在主线程上执行  只有上一个任务执行完毕之后下一个任务才能执行
异步任务指的是   不在主线程上执行，而是在任务队列执行  只有主线程通知任务队列某一个异步任务可以执行了  才会放在任务队列执行

防抖和节流
 防抖指的是在一定时间段内再次触发 就要重新计算时间
 节流指的是在一定时间段内不管有没有再次触发都是不会重新计算时间


react 和  vue中得虚拟dom

这里说明一下react的虚拟dom。react的虚拟dom跟vue的大为不同。vue的虚拟dom是为了是提高渲染效率，而react的虚拟dom是一定需要。
很好理解，vue的template本身就是html，可以直接显示。而jsx是js，需要转换成html，所以用到虚拟dom。




